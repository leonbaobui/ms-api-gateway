server:
  port : 8443

management:
  endpoints:
    web:
      exposure:
        include: "*"
logging:
  level:
    org.springframework.web.HttpLogging: DEBUG
    org.springframework.web.filter.CorsFilter: DEBUG
    org.springframework.security: DEBUG
    reactor.netty.http.server: DEBUG
    reactor.netty.http.client: DEBUG
    logging.level.com.netflix.eureka: DEBUG
    logging.level.com.netflix.discovery: DEBUG
    org:
      springframework:
        cloud:
          gateway: DEBUG
spring:
  application:
    name: ms-api-gateway
  main:
    web-application-type: reactive
  cloud:
    compatibility-verifier:
      enabled: false
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
        - name: Retry
          args:
            retries: 4
            series:
              - SERVER_ERROR
            statuses:
              - INTERNAL_SERVER_ERROR
              - GATEWAY_TIMEOUT
            methods:
              - GET
              - HEAD
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            backoff:
              firstBackoff: 100ms
              maxBackoff: 1000ms
              factor: 2
              basedOnPreviousValue: true
      actuator:
        verbose:
          enabled: false
      httpclient:
        connect-timeout: 10000
        response-timeout: 60s
        ssl:
          useInsecureTrustManager: true
        wiretap: true
#      httpserver:
#        wiretap: true
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/ui/v1/**]':
            allowedOrigins:
              - "https://frontend-twitter.onrender.com"
              - "http://localhost:3000"
            exposedHeaders: "page-total-count"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
              - HEAD
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        -   id: ms-user-service
            uri: https://ms-user-service-irol.onrender.com
            predicates:
              - Path=/ui/v1/user/**, /api/v1/user/**, /api/v1/auth/**
            filters:
              - name: AuthFilter
              - RewritePath=/ui/v1/user(?<segment>/?.*), /ms-user-service/ui/v1/user$\{segment}
              - RewritePath=/api/v1/auth/(?<segment>.*), /ms-user-service/api/v1/auth/$\{segment}
              - RewritePath=/api/v1/user/(?<segment>.*), /ms-user-service/api/v1/user/$\{segment}

        #        Do not apply filter for this route
        -   id: ms-user-service-auth
            uri: https://ms-user-service-irol.onrender.com
            predicates:
              - Path=/ui/v1/auth/**
            filters:
              - RewritePath=/ui/v1/auth/(?<segment>.*), /ms-user-service/ui/v1/auth/$\{segment}

        -   id: ms-tweet-service
            uri: https://ms-tweet-service-vj9h.onrender.com
            predicates:
              - Path=/ui/v1/tweets/**
            filters:
              - name: AuthFilter
              - RewritePath=/ui/v1/tweets(?<segment>/?.*), /ms-tweet-service/ui/v1/tweets$\{segment}

        -   id: ms-image-service
            uri: https://ms-image-service-kfnp.onrender.com
            predicates:
              - Path=/api/v1/image/**
            filters:
              - name: AuthFilter
              - RewritePath=/api/v1/image(?<segment>/?.*), /ms-image-service/api/v1/image$\{segment}

        -   id: ms-chat-service
            uri: https://ms-chat-service-tnm2.onrender.com
            predicates:
              - Path=/ui/v1/chat/**
            filters:
              - name: AuthFilter
              - RewritePath=/ui/v1/chat(?<segment>/?.*), /ms-chat-service/ui/v1/chat$\{segment}

        -   id: ms-email-service
            uri: https://ms-email-service-taww.onrender.com
            predicates:
              - Path=/api/v1/email/suggested
            filters:
              - RewritePath=/api/v1/email/suggested/(?<segment>.*), /ms-email-service/api/v1/email/suggested/$\{segment}

        -   id: ms-websocket-service
            uri: https://ms-websocket-service-k09k.onrender.com
            predicates:
              - Path=/websocket/**, /api/v1/websocket/**
            filters:
              - RewritePath=/websocket/(?<segment>.*), /ms-websocket-service/websocket/$\{segment}
              - RewritePath=/api/v1/websocket(?<segment>/?.*), /ms-websocket-service/api/v1/websocket$\{segment}

#  zipkin:
#    base-url: http://${ZIPKIN_HOST:localhost}:9411

authUser:
  url: https://ms-user-service-irol.onrender.com/ms-user-service/api/v1/auth

eureka:
  instance:
    hostname: ms-api-gateway-inku.onrender.com  # Public domain name
    nonSecurePort: 443  # Standard HTTPS port
    securePortEnabled: true  # Enable if you're using HTTPS
    preferIpAddress: false  # Use the hostname instead of the IP address
    statusPageUrlPath: /actuator/info  # Default status page path
    healthCheckUrlPath: /actuator/health  # Default health check path
  client:
    service-url:
      defaultZone: https://ms-eureka-server-2cvn.onrender.com/eureka
    fetch-registry: true
    register-with-eureka: true
#  instance:
#    hostname: ms-eureka-server-2cvn.onrender.com

jwt:
  secret: 208bc47b3e1ee5554e388c735b9f234f89ac246e8ce463c8313fc1cff16e760e
